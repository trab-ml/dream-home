{"version":3,"file":"static/js/373.847450fd.chunk.js","mappings":"2NAqFA,EAhFeA,EAAAA,MAAW,WACxB,IAAAC,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAMlBC,GAAkDC,EAAAA,EAAAA,GAAwB,CACxEC,UAAW,IACXC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAFKK,EAAaF,EAAA,GAAEG,EAAwBH,EAAA,GAI9C,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAS,cAAAC,OACZH,EAA2B,OAAS,UAClCI,SAAUX,GAXC,SAACY,GAChBC,QAAQC,IAAIF,EACd,IASwCG,IAAKT,EAAcU,SAAA,EACvDR,EAAAA,EAAAA,MAAA,MAAAQ,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,SAAW,UAAMC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,eAAiB,eAC9CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,QAGvBR,EAAAA,EAAAA,MAAA,QAAMC,UAAU,cAAaO,SAAA,EAC3BR,EAAAA,EAAAA,MAAA,OAAKU,GAAG,aAAaT,UAAU,mBAAkBO,SAAA,EAC/CR,EAAAA,EAAAA,MAAA,UAAAW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,KAAK,cACLF,GAAG,cACHT,UAAU,qBACVY,aAAa,SACTtB,EAAS,gBAAc,IAAAiB,SAAA,EAE3BC,EAAAA,EAAAA,KAAA,UAAQK,MAAM,QAAQb,UAAU,MAAKO,SAAC,WAGtCC,EAAAA,EAAAA,KAAA,UAAQK,MAAM,WAAWb,UAAU,MAAKO,SAAC,cAGzCC,EAAAA,EAAAA,KAAA,UAAQK,MAAM,oBAAoBb,UAAU,MAAKO,SAAC,2BAKpDR,EAAAA,EAAAA,MAAA,UAAAW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,KAAK,YACLF,GAAG,YACHT,UAAU,sBACNV,EAAS,cAAY,IAAAiB,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,UAAQK,MAAM,GAAEN,SAAC,kBACjBC,EAAAA,EAAAA,KAAA,UAAQK,MAAM,eAAeb,UAAU,MAAKO,SAAC,kBAG7CC,EAAAA,EAAAA,KAAA,UAAQK,MAAM,cAAcb,UAAU,MAAKO,SAAC,iBAG5CC,EAAAA,EAAAA,KAAA,UAAQK,MAAM,UAAUb,UAAU,MAAKO,SAAC,oBAM5CC,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,GAAA,CACEI,KAAK,OACLH,KAAK,cACLF,GAAG,cACHM,YAAY,wBACZf,UAAU,iCACNV,EAAS,kBAGfkB,EAAAA,EAAAA,KAAA,UACEM,KAAK,SACLL,GAAG,aACHT,UAAU,8BAA6BO,SACxC,oBAMT,G,8CC1DA,IAvBgC,SAACS,GAC/B,IAAAC,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAvB,EAAAA,EAAAA,GAAAqB,EAAA,GAApDG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAClCG,GAAYC,EAAAA,EAAAA,QAAO,MAkBzB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,sBAAqB,SAAAC,GAAc,IAAZC,GAAWhC,EAAAA,EAAAA,GAAA+B,EAAA,GAAN,GAC/CN,EAAkBO,EAAMR,eAC1B,GAAGJ,GAMH,OAJIM,EAAUO,SACZJ,EAASK,QAAQR,EAAUO,SAGtB,WACDP,EAAUO,SACZJ,EAASM,UAAUT,EAAUO,QAEjC,CACF,GAAG,CAACb,IAEG,CAACM,EAAWF,EACrB,C","sources":["components/search_bar/Search.js","scroll/useIntersectionObserver.js"],"sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport useIntersectionObserver from \"../../scroll/useIntersectionObserver\";\nimport \"./search.css\";\n \nconst Search = React.memo(() => {\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n \n  const [searchFormRef, searchFormIsIntersecting] = useIntersectionObserver({\n    threshold: 0,\n  });\n\n  return (\n    <div className={`search_ctn ${\n      searchFormIsIntersecting ? \"show\" : \"hidden\"\n    }`} onSubmit={handleSubmit(onSubmit)} ref={searchFormRef}>\n      <h1>\n        <span>Find</span> your <span>dream home</span> never been\n        <span> easier </span>!\n      </h1>\n\n      <form className=\"search_form\">\n        <div id=\"select-ctn\" className=\"search_form-item\">\n          <select\n            name=\"objet-offre\"\n            id=\"objet-offre\"\n            className=\"search_form-select\"\n            defaultValue=\"vente\"\n            {...register(\"objet-offre\")}\n          >\n            <option value=\"vente\" className=\"opt\">\n              Vente\n            </option>\n            <option value=\"location\" className=\"opt\">\n              Location\n            </option>\n            <option value=\"location_vacances\" className=\"opt\">\n              Location vacances\n            </option>\n          </select>\n                       \n          <select\n            name=\"type-bien\"\n            id=\"type-bien\"\n            className=\"search_form-select\"\n            {...register(\"type-bien\")}\n          >\n            <option value=\"\">Type de bien</option>\n            <option value=\"maison_villa\" className=\"opt\">\n              Maison/Villa\n            </option>\n            <option value=\"appartement\" className=\"opt\">\n              Appartement\n            </option>\n            <option value=\"terrain\" className=\"opt\">\n              Terrain\n            </option>\n          </select>\n        </div>\n\n        <input\n          type=\"text\"\n          name=\"code-postal\"\n          id=\"code-postal\"\n          placeholder=\"code postal, ville...\"\n          className=\"search_input search_form-item\"\n          {...register(\"code-postal\")}\n        />\n\n        <button\n          type=\"submit\"\n          id=\"submit-btn\"\n          className=\"submit-btn search_form-item\"\n        >\n          Rechercher\n        </button>\n      </form>\n    </div>\n  );\n});\n\nexport default Search;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useIntersectionObserver = (options) => {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n  const targetRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setIsIntersecting(entry.isIntersecting);\n    }, options);\n\n    if (targetRef.current) {\n      observer.observe(targetRef.current);\n    }\n\n    return () => {\n      if (targetRef.current) {\n        observer.unobserve(targetRef.current);\n      }\n    };\n  }, [options]);\n\n  return [targetRef, isIntersecting];\n};\n\nexport default useIntersectionObserver;\n"],"names":["React","_useForm","useForm","register","handleSubmit","_useIntersectionObser","useIntersectionObserver","threshold","_useIntersectionObser2","_slicedToArray","searchFormRef","searchFormIsIntersecting","_jsxs","className","concat","onSubmit","data","console","log","ref","children","_jsx","id","_objectSpread","name","defaultValue","value","type","placeholder","options","_useState","useState","_useState2","isIntersecting","setIsIntersecting","targetRef","useRef","useEffect","observer","IntersectionObserver","_ref","entry","current","observe","unobserve"],"sourceRoot":""}