{"version":3,"file":"static/js/555.46915eae.chunk.js","mappings":"uMAIMA,EAAO,CACX,aACA,aACA,mBACA,aACA,YACA,YACA,YACA,eACA,gBA8DF,EA3DgBC,EAAAA,MAAW,WACzB,IAAAC,GAAwCC,EAAAA,EAAAA,GAAwB,CAC9DC,UAAW,IACXC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAFKK,EAAQF,EAAA,GAAEG,EAAmBH,EAAA,GAGpCI,GAAwCN,EAAAA,EAAAA,GAAwB,CAC9DC,UAAW,KACXM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAFKE,EAAQD,EAAA,GAAEE,EAAmBF,EAAA,GAGpCG,GAAwCV,EAAAA,EAAAA,GAAwB,CAC9DC,UAAW,MACXU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAFKE,EAAQD,EAAA,GAAEE,EAAmBF,EAAA,GAKpC,OACEG,EAAAA,EAAAA,MAAA,WAASC,UAAU,6BAA4BC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OACEC,UAAS,cAAAE,OAAgBZ,EAAsB,OAAS,UACxDa,IAAKd,EAASY,SAAA,EAEdG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,SAAQC,UACrBG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,oEAENG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,SAAQC,UACrBG,EAAAA,EAAAA,KAAA,OACEC,IAAG,GAAAH,OAAKI,cAAsB,0BAC9BC,IAAI,kBAKVR,EAAAA,EAAAA,MAAA,OACEC,UAAS,cAAAE,OAAgBR,EAAsB,OAAS,UACxDS,IAAKV,EAASQ,SAAA,EAEdG,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,SAAQC,UACrBG,EAAAA,EAAAA,KAAA,OACEC,IAAG,GAAAH,OAAKI,cAAsB,sBAC9BC,IAAI,eAGRH,EAAAA,EAAAA,KAAA,OAAKJ,UAAU,SAAQC,UACrBG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,iEAIRF,EAAAA,EAAAA,MAAA,OACEC,UAAS,gBAAAE,OAAkBJ,EAAsB,OAAS,UAC1DK,IAAKN,EAASI,SAAA,CAEbnB,EAAK0B,KAAI,SAACC,GAAG,OACZL,EAAAA,EAAAA,KAAA,OAAeJ,UAAU,OAAMC,UAC7BG,EAAAA,EAAAA,KAAA,OAAKC,IAAG,GAAAH,OAAKI,cAAsB,UAAAJ,OAASO,GAAOF,IAAKE,KADhDA,EAEJ,KAERL,EAAAA,EAAAA,KAAA,MAAAH,SAAI,gEAIZ,G,8CChDA,IAvBgC,SAACS,GAC/B,IAAAC,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAzB,EAAAA,EAAAA,GAAAuB,EAAA,GAApDG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAClCG,GAAYC,EAAAA,EAAAA,QAAO,MAkBzB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,sBAAqB,SAAAC,GAAc,IAAZC,GAAWlC,EAAAA,EAAAA,GAAAiC,EAAA,GAAN,GAC/CN,EAAkBO,EAAMR,eAC1B,GAAGJ,GAMH,OAJIM,EAAUO,SACZJ,EAASK,QAAQR,EAAUO,SAGtB,WACDP,EAAUO,SACZJ,EAASM,UAAUT,EAAUO,QAEjC,CACF,GAAG,CAACb,IAEG,CAACM,EAAWF,EACrB,C","sources":["pages/service/Service.js","scroll/useIntersectionObserver.js"],"sourcesContent":["import React from \"react\";\nimport useIntersectionObserver from \"../../scroll/useIntersectionObserver\";\nimport \"./service.css\";\n\nconst IMGS = [\n  \"about4.jpg\",\n  \"about5.jpg\",\n  \"conseillere2.jpg\",\n  \"enjoy1.jpg\",\n  \"nice1.jpg\",\n  \"nice2.jpg\",\n  \"nice3.jpg\",\n  \"service1.jpg\",\n  \"service2.jpg\",\n];\n\nconst Service = React.memo(() => {\n  const [item1Ref, item1IsIntersecting] = useIntersectionObserver({\n    threshold: 0,\n  });\n  const [item2Ref, item2IsIntersecting] = useIntersectionObserver({\n    threshold: .5,\n  });\n  const [item3Ref, item3IsIntersecting] = useIntersectionObserver({\n    threshold: .75,\n  });\n  // threshold: [0.5, 0.75, 1],\n\n  return (\n    <section className=\"flexCenter service-section\">\n      <div\n        className={`item item1 ${item1IsIntersecting ? \"show\" : \"hidden\"}`}\n        ref={item1Ref}\n      >\n        <div className=\"txt-bx\">\n          <h1>On saura vous conseiller et vous accompagner dans vos choix.</h1>\n        </div>\n        <div className=\"img-bx\">\n          <img\n            src={`${process.env.PUBLIC_URL}/imgs/conseillere2.jpg`}\n            alt=\"service\"\n          />\n        </div>\n      </div>\n\n      <div\n        className={`item item2 ${item2IsIntersecting ? \"show\" : \"hidden\"}`}\n        ref={item2Ref}\n      >\n        <div className=\"img-bx\">\n          <img\n            src={`${process.env.PUBLIC_URL}/imgs/service2.jpg`}\n            alt=\"service\"\n          />\n        </div>\n        <div className=\"txt-bx\">\n          <h1>Nous vous offrons des logements qui valent le coût.</h1>\n        </div>\n      </div>\n\n      <div\n        className={`service-grid ${item3IsIntersecting ? \"show\" : \"hidden\"}`}\n        ref={item3Ref}\n      >\n        {IMGS.map((img) => (\n          <div key={img} className=\"item\">\n            <img src={`${process.env.PUBLIC_URL}/imgs/${img}`} alt={img} />\n          </div>\n        ))}\n        <h5>La satisfaction de nos clients nous tient à coeur !</h5>\n      </div>\n    </section>\n  );\n});\n\nexport default Service;\n","import { useEffect, useRef, useState } from 'react';\n\nconst useIntersectionObserver = (options) => {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n  const targetRef = useRef(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => {\n      setIsIntersecting(entry.isIntersecting);\n    }, options);\n\n    if (targetRef.current) {\n      observer.observe(targetRef.current);\n    }\n\n    return () => {\n      if (targetRef.current) {\n        observer.unobserve(targetRef.current);\n      }\n    };\n  }, [options]);\n\n  return [targetRef, isIntersecting];\n};\n\nexport default useIntersectionObserver;\n"],"names":["IMGS","React","_useIntersectionObser","useIntersectionObserver","threshold","_useIntersectionObser2","_slicedToArray","item1Ref","item1IsIntersecting","_useIntersectionObser3","_useIntersectionObser4","item2Ref","item2IsIntersecting","_useIntersectionObser5","_useIntersectionObser6","item3Ref","item3IsIntersecting","_jsxs","className","children","concat","ref","_jsx","src","process","alt","map","img","options","_useState","useState","_useState2","isIntersecting","setIsIntersecting","targetRef","useRef","useEffect","observer","IntersectionObserver","_ref","entry","current","observe","unobserve"],"sourceRoot":""}